######################################
##### These need to be replaced ######
#### with updates from the device ####
######################################

record(waveform, "$(P)VOLT:CALC")
{
    field(SCAN, "Passive")
    field(NELM, "1000")
    field(FTVL, "DOUBLE")
}

record(waveform, "$(P)CURR:CALC")
{
    field(SCAN, "Passive")
    field(NELM, "1000")
    field(FTVL, "DOUBLE")
}

####################################
## Stability boundary definitions ##
##### need to be set by macros #####
####################################

record(ai, "$(P)SAMPLETIME")
{

    field(SCAN, "Passive")
    field(VAL, "1.0")
}

record(ai, "$(P)VOLT:UPPERLIM")
{

    field(SCAN, "Passive")
    field(VAL, "6.0")
}

record(ai, "$(P)VOLT:LOWERLIM")
{

    field(SCAN, "Passive")
    field(VAL, "4.0")
}

record(ai, "$(P)CURR:STEADY")
{
    field(SCAN, "Passive")
    field(VAL, "1.0")
}

record(ai, "$(P)CURR:LIMIT")
{
    field(SCAN, "Passive")
    field(VAL, "0.5")
}

###################
## Logic records ##
###################

record(acalcout, "$(P)_STABILITYCHECK")
{
    field(DESC, "Finds number of samples outside limits")
    field(OOPT, "Every Time")
    field(NELM, "1000")


    # 0 if sample is within threshold, 1 if sample is outside threshold
    # A is upper limit, B is lower limit, C + D is current threshold
    field(CALC, "SUM((A<AA)||(B>AA)||((C+D)<=BB))")

    # This will update on new voltage and current data. This may need revisiting to only update once.
    field(INAA, "$(P)VOLT:CALC CP")
    field(INBB, "$(P)CURR:CALC NPP")

    field(INPA, "$(P)VOLT:UPPERLIM NPP")
    field(INPB, "$(P)VOLT:LOWERLIM NPP")
    field(INPC, "$(P)CURR:STEADY NPP")
    field(INPD, "$(P)CURR:LIMIT NPP")

    field(FLNK, "$(P)_ADDCOUNTS")
}

record(calcout, "$(P)_ADDCOUNTS")
{
    field(DESC, "Adds number of unstable points")
    field(SCAN, "Passive")

    field(CALC, "A+B")

    field(INPA, "$(P)_ADDCOUNTS")
    field(INPB, "$(P)_STABILITYCHECK CP")

    field(OUT, "$(P)_UNSTABLESAMPLES")
}

record(acalcout, "$(P)_UNSTABLESAMPLES")
{
    field(DESC, "Counts samples out of stable region")
    field(SCAN, "Passive")
    field(OOPT, "Every Time")

    field(NELM, "1000")

    field(CALC, "SUM(AA)")

    field(INAA, "$(P)_SAMPLEBUFFER NPP")
}

record(ao, "$(P)_ZEROCOUNTER")
{
    field(SCAN, "Passive")
    field(VAL, "0")
    field(OUT, "$(P)_ADDCOUNTS")
}

record(acalcout, "$(P)_RESETMOVINGAVG")
{
    field(DESC, "Resets the moving average")
    field(SCAN, "Passive")
    field(CALC, "ARR(0)")
    field(NELM, "1000")
    field(OOPT, "Every Time")
    field(DOPT, "Use CALC")

    field(OUT, "$(P)_MOVINGBUFFER")
}

record(acalcout, "$(P)_RESETBUFFER")
{
    field(DESC, "Resets the buffer of samples")
    field(SCAN, "Passive")
    field(CALC, "ARR(0)")
    field(NELM, "1000")
    field(OOPT, "Every Time")
    field(DOPT, "Use CALC")

    field(OUT, "$(P)_SAMPLEBUFFER PP")
}

record(compress, "$(P)_MOVINGBUFFER")
{
    field(DESC, "Records time-binned stability")
    field(SCAN, "Passive")
    field(ALG, "Circular Buffer")
    field(NSAM, "600")
    field(INP, "$(P)_UNSTABLESAMPLES NPP")

    field(FLNK, "$(P)STABILITY PP")
}

record(fanout, "$(P)_COUNTERTIMING")
{
    field(SCAN, "1 second")
    field(LNK1, "$(P)_MOVINGBUFFER PP")
    field(LNK2, "$(P)_RESETBUFFER PP")
    field(LNK3, "$(P)_ZEROCOUNTER PP")
}

record(acalcout, "$(P)STABILITY")
{
    field(DESC, "Calculates instability in moving average")
    field(SCAN, "Passive")

    field(CALC, "SUM(AA)*B")

    field(INAA, "$(P)_MOVINGBUFFER CP ")
    field(INPB, "$(P)SAMPLETIME")
}

record(aSub, "$(P)STABILITY:PARSE")
{
    field(SNAM, "parse_stability")

    field(INPA, "$(P)TEMP CP")
    field(FTA, "DOUBLE")

    field(OUTA, "$(P)STATUS:TEMP")
    field(FTVA, "DOUBLE")
}

record(ao, "$(P)TEMP")
{
    field(OUT, "$(P)STABILITY:PARSE")
}

record(ai, "$(P)STATUS:TEMP")
{
    field(VAL, "0")
    field(INP, "$(P)STABILITY:PARSE.VALA")
}