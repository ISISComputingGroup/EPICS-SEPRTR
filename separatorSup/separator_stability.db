####################################
## Stability boundary definitions ##
####################################

record(calc, "$(P)SAMPLETIME")
{
    field(DESC, "Holds sample time (1/freq)")
    field(EGU, "S")
    field(SCAN, "Passive")
    field(CALC, "1.0/$(FREQ)")
    field(PINI, "YES")
}

record(ai, "$(P)VOLT:UPPERLIM")
{
    field(DESC, "Upper voltage limit")
    field(SCAN, "Passive")
    field(EGU, "kV")
    field(VAL, "$(VUPPERLIM)")
}

record(ai, "$(P)VOLT:LOWERLIM")
{
    field(DESC, "Lower voltage limit")
    field(SCAN, "Passive")
    field(EGU, "kV")
    field(VAL, "$(VLOWERLIM)")
}

record(ai, "$(P)CURR:STEADY")
{
    field(DESC, "Nominal current value")
    field(SCAN, "Passive")
    field(EGU, "mA")
    field(VAL, "$(ISTEADY)")
}

record(ai, "$(P)CURR:LIMIT")
{
    field(DESC, "Maximum current deviation")
    field(SCAN, "Passive")
    field(EGU, "mA")
    field(VAL, "$(ILIMIT)")
}


record(ai, "$(P)WINDOWSIZE")
{
    field(DESC, "Seconds in the moving window")
    field(VAL, "$(WINDOWSIZE)")
}

###################
## Logic records ##
###################

record(acalcout, "$(P)_STABILITYCHECK")
{
    field(DESC, "Finds number of samples outside limits")
    field(OOPT, "Every Time")
    field(NELM, "$(NELM)")


    # 0 if sample is within threshold, 1 if sample is outside threshold
    # A is upper limit, B is lower limit, C + D is current threshold
    field(CALC, "SUM((A<AA)||(B>AA)||((C+D)<=BB))")

    # Only update on new voltage (or current) data to avoid double counting
    field(INAA, "$(P)CALIBRATE:VOLT CP")
    field(INBB, "$(P)CALIBRATE:CURR NPP")

    field(INPA, "$(P)VOLT:UPPERLIM NPP")
    field(INPB, "$(P)VOLT:LOWERLIM NPP")
    field(INPC, "$(P)CURR:STEADY NPP")
    field(INPD, "$(P)CURR:LIMIT NPP")

    field(FLNK, "$(P)_ADDCOUNTS")
}

record(calcout, "$(P)_ADDCOUNTS")
{
    field(DESC, "Adds number of unstable points")
    field(SCAN, "Passive")

    field(CALC, "A+B")

    field(INPA, "$(P)_ADDCOUNTS")
    field(INPB, "$(P)_STABILITYCHECK")
}

record(ao, "$(P)_ZEROCOUNTER")
{
    field(DESC, "Resets the unstable point counter")
    field(SCAN, "Passive")
    field(VAL, "0")
    field(OUT, "$(P)_ADDCOUNTS")
}

record(fanout, "$(P)_COUNTERTIMING")
{
    field(DESC, "Add 1 second of data to buffer")
    field(SCAN, "1 second")
    field(LNK1, "$(P)STABILITY:PARSE PP")
    field(LNK2, "$(P)_ZEROCOUNTER PP")
}

record(calc, "$(P)STABILITY")
{
    field(DESC, "Moving window of unstable time")
    field(EGU, "S")
    field(SCAN, "Passive")
    field(CALC, "A * B")

    field(INPB, "$(P)SAMPLETIME CP")

    info(alarm, "SEPRTR")
    info(archive, "VAL")
    info(INTEREST, "HIGH")
}

record(aSub, "$(P)STABILITY:PARSE")
{
    field(DESC, "Keeps circular buffer of data")
    field(SNAM, "parse_stability")
    field(PINI, "YES")

    field(INPA, "$(P)_ADDCOUNTS")
    field(FTA, "LONG")

    field(INPB, "$(P)WINDOWSIZE")
    field(FTB, "LONG")

    field(INPC, "$(P)RESETWINDOW CP")
    field(FTC, "LONG")

    field(OUTA, "$(P)STABILITY.A PP")
    field(FTVA, "LONG")

    field(OUTB, "$(P)RESETWINDOW PP")
    field(FTVB, "LONG")
}

record(bi, "$(P)RESETWINDOW")
{
    field(DESC, "Resets the moving window")
    field(VAL, "0")
}
